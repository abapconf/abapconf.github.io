{"version":3,"file":"Main.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Models","__Models","Main","extend","onInit","_onInit","router","this","getOwnerComponent","getRouter","getRoute","attachPatternMatched","onObjectMatched","async","_onObjectMatched","event","speakersJson","getModel","dataLoaded","speakers","getProperty","i18nModel","getResourceBundle","text","getText","length","mainView","createMainViewModel","setProperty","setModel","openSpeakerDetail","_openSpeakerDetail","control","getSource","ctx","getBindingContext","path","getPath","dialog","loadFragment","name","bindElement","open","onCloseDialog","_onCloseDialog","byId","close","getEventName","_getEventName","eventid","bundle","geti18nModel","eventName","key","settings","title","uppercase","GroupHeaderListItem","doFilterByABAPConf","_doFilterByABAPConf","binding","getBinding","filter","createFilter","_createFilter","Filter","test","aValue","result","item"],"sources":["Main.controller.ts"],"sourcesContent":["import Event from \"sap/ui/base/Event\";\nimport BaseController from \"./BaseController\";\nimport Dialog from \"sap/m/Dialog\";\nimport GroupHeaderListItem, { $GroupHeaderListItemSettings } from \"sap/m/GroupHeaderListItem\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Context from \"sap/ui/model/Context\";\nimport Control from \"sap/ui/core/Control\";\nimport Binding from \"sap/ui/model/Binding\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Models from \"../model/models\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\ninterface groupHeaderEvent {\n    key: string;\n}\n\n/**\n * @namespace org.abapconf.legends.controller\n */\nexport default class Main extends BaseController {\n\n\tprivate dialog : Dialog;\n\n    public onInit(): void {\n        const router = this.getOwnerComponent().getRouter();\n\t\trouter.getRoute(\"main\").attachPatternMatched(this.onObjectMatched, this);\n    }\n\n\n    public async onObjectMatched(event: Event) {\n        // get number of speakers and add as parameter to description\n        const speakersJson = this.getModel() as JSONModel;\n        await speakersJson.dataLoaded();\n        const speakers = speakersJson.getProperty(\"/\");\n        const i18nModel: ResourceBundle = await this.getResourceBundle();\n        const text = i18nModel.getText(\"legendsNumber\", speakers.length);\n\n        // set main view\n        const mainView = await Models.createMainViewModel();\n        mainView.setProperty(\"/legendsNumber\", text);\n        this.setModel(mainView, \"mainView\");\n\t}\n    \n\n\tasync openSpeakerDetail(event: Event): Promise<void> {\n\n        // get path to clicked speaker\n        const control: Control = event.getSource();\n        const ctx: Context = control.getBindingContext();\n        const path = ctx.getPath();\n\n        //const path: string = event.getSource().getBindingContext().getPath() as string;\n\n\t\t// load fragment if not already done\n        this.dialog ??= await <Promise<Dialog>> this.loadFragment({\n             name: \"org.abapconf.legends.view.fragment.SpeakerDialog\",\n        });\n\n        // bind to speaker\n\t\tthis.dialog.bindElement(path);\n\n        this.dialog.open();\n    }\n\n\tonCloseDialog(): void {\n        // note: We don't need to chain to the pDialog promise, since this event-handler\n        // is only called from within the loaded dialog itself.\n        (<Dialog> this.byId(\"speakerDialog\"))?.close();\n    }\n\n    /**\n     * Format the provided event name from the speakers model into a human readable text\n     * @param eventid \n     * @returns \n     */\n    getEventName(eventid: groupHeaderEvent): GroupHeaderListItem {\n\n        // use event id to get text from i18n\n        const bundle = this.geti18nModel();\n        const eventName: string = bundle.getText(eventid.key);\n\n        // build group header with name from i18n\n        const settings = {\n            title: eventName,\n            uppercase: false\n        } as $GroupHeaderListItemSettings;\n\n        return new GroupHeaderListItem(\n            settings\n        );\n    }\n\n    /**\n     * Filter grid by event\n     * @param event \n     */\n    doFilterByABAPConf(event: string): void {\n        const control: Control = this.byId(\"gridSpeakers\") as Control;\n        const binding: Binding = control.getBinding(\"content\");\n\n        if (event === \"all\") {\n            binding.filter([]);\n        } else {\n            const filter: Filter = this.createFilter(event);\n            binding.filter([filter]);\n        }\n        \n    }\n\n    /**\n     * Create filter based on event\n     * @param event \n     * @returns \n     */\n    private createFilter(event: string): Filter {\n        //console.log(\"createFilter for %s\", event);\n        \n        const filter = new Filter(\n            {\n                path: 'events',\n                test: function(aValue: string[]) {\n                    const result: string[] = aValue.filter( (item) => item === event);\n                    return result.length > 0 ? true : false;\n                }\n            });\n        return filter;\n    }\n\n}\n"],"mappings":"0OACOA,EAAcC,EAAAC,GAAA,MAQdC,EAAMF,EAAAG,GAOb,MAGqBC,EAAaL,EAAcM,OAAA,wCAIrCC,OAAM,SAAAC,IACT,MAAMC,EAASC,KAAKC,oBAAoBC,YAC9CH,EAAOI,SAAS,QAAQC,qBAAqBJ,KAAKK,gBAAiBL,KACjE,EAGaK,gBAAeC,eAAAC,EAACC,GAEzB,MAAMC,EAAeT,KAAKU,iBACpBD,EAAaE,aACnB,MAAMC,EAAWH,EAAaI,YAAY,KAC1C,MAAMC,QAAkCd,KAAKe,oBAC7C,MAAMC,EAAOF,EAAUG,QAAQ,gBAAiBL,EAASM,QAGzD,MAAMC,QAAiB1B,EAAO2B,sBAC9BD,EAASE,YAAY,iBAAkBL,GACvChB,KAAKsB,SAASH,EAAU,WAC/B,EAGMI,kBAAiBjB,eAAAkB,EAAChB,GAGjB,MAAMiB,EAAmBjB,EAAMkB,YAC/B,MAAMC,EAAeF,EAAQG,oBAC7B,MAAMC,EAAOF,EAAIG,UAKjB9B,KAAK+B,eAAmC/B,KAAKgC,aAAa,CACrDC,KAAM,qDAIjBjC,KAAK+B,OAAOG,YAAYL,GAElB7B,KAAK+B,OAAOI,MAChB,EAEHC,cAAa,SAAAC,IAGIrC,KAAKsC,KAAK,kBAAmBC,OAC3C,EAOAC,aAAY,SAAAC,EAACC,GAGT,MAAMC,EAAS3C,KAAK4C,eACpB,MAAMC,EAAoBF,EAAO1B,QAAQyB,EAAQI,KAGjD,MAAMC,EAAW,CACbC,MAAOH,EACPI,UAAW,OAGf,OAAO,IAAIC,EACPH,EAER,EAMAI,mBAAkB,SAAAC,EAAC5C,GACf,MAAMiB,EAAmBzB,KAAKsC,KAAK,gBACnC,MAAMe,EAAmB5B,EAAQ6B,WAAW,WAE5C,GAAI9C,IAAU,MAAO,CACjB6C,EAAQE,OAAO,GACnB,KAAO,CACH,MAAMA,EAAiBvD,KAAKwD,aAAahD,GACzC6C,EAAQE,OAAO,CAACA,GACpB,CAEJ,EAOQC,aAAY,SAAAC,EAACjD,GAGjB,MAAM+C,EAAS,IAAIG,EACf,CACI7B,KAAM,SACN8B,KAAM,SAASC,GACX,MAAMC,EAAmBD,EAAOL,OAASO,GAASA,IAAStD,GAC3D,OAAOqD,EAAO3C,OAAS,EAAI,KAAO,KACtC,IAER,OAAOqC,CACX,IAAC,OA3GgB5D,CAAI","ignoreList":[]}