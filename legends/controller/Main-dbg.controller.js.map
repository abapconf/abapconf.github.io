{"version":3,"file":"Main-dbg.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Main","extend","openSpeakerDetail","_openSpeakerDetail","event","control","getSource","ctx","getBindingContext","path","getPath","dialog","loadFragment","name","bindElement","open","onCloseDialog","_onCloseDialog","byId","close","getEventName","_getEventName","eventid","bundle","geti18nModel","eventName","getText","key","settings","title","uppercase","GroupHeaderListItem","doFilterByABAPConf","_doFilterByABAPConf","binding","getBinding","filter","createFilter","_createFilter","console","log","Filter","test","aValue","result","item","length"],"sources":["Main.controller.ts"],"sourcesContent":["import Event from \"sap/ui/base/Event\";\nimport BaseController from \"./BaseController\";\nimport Dialog from \"sap/m/Dialog\";\nimport GroupHeaderListItem, { $GroupHeaderListItemSettings } from \"sap/m/GroupHeaderListItem\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Context from \"sap/ui/model/Context\";\nimport Control from \"sap/ui/core/Control\";\nimport Binding from \"sap/ui/model/Binding\";\n\ninterface groupHeaderEvent {\n    key: string;\n}\n\n/**\n * @namespace org.abapconf.legends.controller\n */\nexport default class Main extends BaseController {\n\n\tprivate dialog : Dialog;\n    \n    \n\n\tasync openSpeakerDetail(event: Event): Promise<void> {\n\n        // get path to clicked speaker\n        const control: Control = event.getSource();\n        const ctx: Context = control.getBindingContext();\n        const path = ctx.getPath();\n\n        //const path: string = event.getSource().getBindingContext().getPath() as string;\n\n\t\t// load fragment if not already done\n        this.dialog ??= await <Promise<Dialog>> this.loadFragment({\n             name: \"org.abapconf.legends.view.fragment.SpeakerDialog\",\n        });\n\n        // bind to speaker\n\t\tthis.dialog.bindElement(path);\n\n        this.dialog.open();\n    }\n\n\tonCloseDialog(): void {\n        // note: We don't need to chain to the pDialog promise, since this event-handler\n        // is only called from within the loaded dialog itself.\n        (<Dialog> this.byId(\"speakerDialog\"))?.close();\n    }\n\n    /**\n     * Format the provided event name from the speakers model into a human readable text\n     * @param eventid \n     * @returns \n     */\n    getEventName(eventid: groupHeaderEvent): GroupHeaderListItem {\n\n        // use event id to get text from i18n\n        const bundle = this.geti18nModel();\n        const eventName: string = bundle.getText(eventid.key);\n\n        // build group header with name from i18n\n        const settings = {\n            title: eventName,\n            uppercase: false\n        } as $GroupHeaderListItemSettings;\n\n        return new GroupHeaderListItem(\n            settings\n        );\n    }\n\n    /**\n     * Filter grid by event\n     * @param event \n     */\n    doFilterByABAPConf(event: string): void {\n        const control: Control = this.byId(\"gridSpeakers\") as Control;\n        const binding: Binding = control.getBinding(\"content\");\n        const filter: Filter = this.createFilter(event);\n\n        binding.filter([filter]);        \n    }\n\n    /**\n     * Create filter based on event\n     * @param event \n     * @returns \n     */\n    private createFilter(event: string): Filter {\n        console.log(\"createFilter for %s\", event);\n        \n        const filter = new Filter(\n            {\n                path: 'events',\n                test: function(aValue: string[]) {\n                    const result: string[] = aValue.filter( (item) => item === event);\n                    return result.length > 0 ? true : false;\n                }\n            });\n        return filter;\n    }\n    \n\n\n}\n"],"mappings":";;;;;;;;QACOA,cAAc,GAAAC,sBAAA,CAAAC,gBAAA;EAYrB;AACA;AACA;EAFA,MAGqBC,IAAI,GAASH,cAAc,CAAAI,MAAA;IAMzCC,iBAAiB,iBAAAC,mBAACC,KAAY,EAAiB;MAE9C;MACA,MAAMC,OAAgB,GAAGD,KAAK,CAACE,SAAS,CAAC,CAAC;MAC1C,MAAMC,GAAY,GAAGF,OAAO,CAACG,iBAAiB,CAAC,CAAC;MAChD,MAAMC,IAAI,GAAGF,GAAG,CAACG,OAAO,CAAC,CAAC;;MAE1B;;MAEN;MACM,IAAI,CAACC,MAAM,KAAK,MAAwB,IAAI,CAACC,YAAY,CAAC;QACrDC,IAAI,EAAE;MACX,CAAC,CAAC;;MAEF;MACN,IAAI,CAACF,MAAM,CAACG,WAAW,CAACL,IAAI,CAAC;MAEvB,IAAI,CAACE,MAAM,CAACI,IAAI,CAAC,CAAC;IACtB,CAAC;IAEJC,aAAa,WAAAC,eAAA,EAAS;MACf;MACA;MACU,IAAI,CAACC,IAAI,CAAC,eAAe,CAAC,EAAGC,KAAK,CAAC,CAAC;IAClD,CAAC;IAED;AACJ;AACA;AACA;AACA;IACIC,YAAY,WAAAC,cAACC,OAAyB,EAAuB;MAEzD;MACA,MAAMC,MAAM,GAAG,IAAI,CAACC,YAAY,CAAC,CAAC;MAClC,MAAMC,SAAiB,GAAGF,MAAM,CAACG,OAAO,CAACJ,OAAO,CAACK,GAAG,CAAC;;MAErD;MACA,MAAMC,QAAQ,GAAG;QACbC,KAAK,EAAEJ,SAAS;QAChBK,SAAS,EAAE;MACf,CAAiC;MAEjC,OAAO,IAAIC,mBAAmB,CAC1BH,QACJ,CAAC;IACL,CAAC;IAED;AACJ;AACA;AACA;IACII,kBAAkB,WAAAC,oBAAC7B,KAAa,EAAQ;MACpC,MAAMC,OAAgB,GAAG,IAAI,CAACa,IAAI,CAAC,cAAc,CAAY;MAC7D,MAAMgB,OAAgB,GAAG7B,OAAO,CAAC8B,UAAU,CAAC,SAAS,CAAC;MACtD,MAAMC,MAAc,GAAG,IAAI,CAACC,YAAY,CAACjC,KAAK,CAAC;MAE/C8B,OAAO,CAACE,MAAM,CAAC,CAACA,MAAM,CAAC,CAAC;IAC5B,CAAC;IAED;AACJ;AACA;AACA;AACA;IACYC,YAAY,WAAAC,cAAClC,KAAa,EAAU;MACxCmC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEpC,KAAK,CAAC;MAEzC,MAAMgC,MAAM,GAAG,IAAIK,MAAM,CACrB;QACIhC,IAAI,EAAE,QAAQ;QACdiC,IAAI,EAAE,SAAAA,CAASC,MAAgB,EAAE;UAC7B,MAAMC,MAAgB,GAAGD,MAAM,CAACP,MAAM,CAAGS,IAAI,IAAKA,IAAI,KAAKzC,KAAK,CAAC;UACjE,OAAOwC,MAAM,CAACE,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,KAAK;QAC3C;MACJ,CAAC,CAAC;MACN,OAAOV,MAAM;IACjB;EAAC;EAAA,OAnFgBpC,IAAI;AAAA"}