{"version":3,"file":"Main-dbg.controller.js","names":["BaseController","_interopRequireDefault","__BaseController","Models","__Models","Main","extend","onInit","_onInit","router","getOwnerComponent","getRouter","getRoute","attachPatternMatched","onObjectMatched","_onObjectMatched","event","speakersJson","getModel","dataLoaded","speakers","getProperty","i18nModel","getResourceBundle","text","getText","length","mainView","createMainViewModel","setProperty","setModel","openSpeakerDetail","_openSpeakerDetail","control","getSource","ctx","getBindingContext","path","getPath","dialog","loadFragment","name","bindElement","open","onCloseDialog","_onCloseDialog","byId","close","getEventName","_getEventName","eventid","bundle","geti18nModel","eventName","key","settings","title","uppercase","GroupHeaderListItem","doFilterByABAPConf","_doFilterByABAPConf","binding","getBinding","filter","createFilter","_createFilter","Filter","test","aValue","result","item"],"sources":["Main.controller.ts"],"sourcesContent":["import Event from \"sap/ui/base/Event\";\nimport BaseController from \"./BaseController\";\nimport Dialog from \"sap/m/Dialog\";\nimport GroupHeaderListItem, { $GroupHeaderListItemSettings } from \"sap/m/GroupHeaderListItem\";\nimport Filter from \"sap/ui/model/Filter\";\nimport Context from \"sap/ui/model/Context\";\nimport Control from \"sap/ui/core/Control\";\nimport Binding from \"sap/ui/model/Binding\";\nimport ResourceBundle from \"sap/base/i18n/ResourceBundle\";\nimport Models from \"../model/models\";\nimport JSONModel from \"sap/ui/model/json/JSONModel\";\n\ninterface groupHeaderEvent {\n    key: string;\n}\n\n/**\n * @namespace org.abapconf.legends.controller\n */\nexport default class Main extends BaseController {\n\n\tprivate dialog : Dialog;\n\n    public onInit(): void {\n        const router = this.getOwnerComponent().getRouter();\n\t\trouter.getRoute(\"main\").attachPatternMatched(this.onObjectMatched, this);\n    }\n\n\n    public async onObjectMatched(event: Event) {\n        // get number of speakers and add as parameter to description\n        const speakersJson = this.getModel() as JSONModel;\n        await speakersJson.dataLoaded();\n        const speakers = speakersJson.getProperty(\"/\");\n        const i18nModel: ResourceBundle = await this.getResourceBundle();\n        const text = i18nModel.getText(\"legendsNumber\", speakers.length);\n\n        // set main view\n        const mainView = await Models.createMainViewModel();\n        mainView.setProperty(\"/legendsNumber\", text);\n        this.setModel(mainView, \"mainView\");\n\t}\n    \n\n\tasync openSpeakerDetail(event: Event): Promise<void> {\n\n        // get path to clicked speaker\n        const control: Control = event.getSource();\n        const ctx: Context = control.getBindingContext();\n        const path = ctx.getPath();\n\n        //const path: string = event.getSource().getBindingContext().getPath() as string;\n\n\t\t// load fragment if not already done\n        this.dialog ??= await <Promise<Dialog>> this.loadFragment({\n             name: \"org.abapconf.legends.view.fragment.SpeakerDialog\",\n        });\n\n        // bind to speaker\n\t\tthis.dialog.bindElement(path);\n\n        this.dialog.open();\n    }\n\n\tonCloseDialog(): void {\n        // note: We don't need to chain to the pDialog promise, since this event-handler\n        // is only called from within the loaded dialog itself.\n        (<Dialog> this.byId(\"speakerDialog\"))?.close();\n    }\n\n    /**\n     * Format the provided event name from the speakers model into a human readable text\n     * @param eventid \n     * @returns \n     */\n    getEventName(eventid: groupHeaderEvent): GroupHeaderListItem {\n\n        // use event id to get text from i18n\n        const bundle = this.geti18nModel();\n        const eventName: string = bundle.getText(eventid.key);\n\n        // build group header with name from i18n\n        const settings = {\n            title: eventName,\n            uppercase: false\n        } as $GroupHeaderListItemSettings;\n\n        return new GroupHeaderListItem(\n            settings\n        );\n    }\n\n    /**\n     * Filter grid by event\n     * @param event \n     */\n    doFilterByABAPConf(event: string): void {\n        const control: Control = this.byId(\"gridSpeakers\") as Control;\n        const binding: Binding = control.getBinding(\"content\");\n\n        if (event === \"all\") {\n            binding.filter([]);\n        } else {\n            const filter: Filter = this.createFilter(event);\n            binding.filter([filter]);\n        }\n        \n    }\n\n    /**\n     * Create filter based on event\n     * @param event \n     * @returns \n     */\n    private createFilter(event: string): Filter {\n        //console.log(\"createFilter for %s\", event);\n        \n        const filter = new Filter(\n            {\n                path: 'events',\n                test: function(aValue: string[]) {\n                    const result: string[] = aValue.filter( (item) => item === event);\n                    return result.length > 0 ? true : false;\n                }\n            });\n        return filter;\n    }\n\n}\n"],"mappings":"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"}